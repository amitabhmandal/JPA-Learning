We should be using Primary Keys for Database rows comparisons

However within the data base there are two types of keys
1. Surrogate Keys  - They are generated by us to uniquely represent any rows
2. Natural Keys - They are only used when we are inheriting any database. They have some business
values

Different types of Surrogate keys that can be defined

option #1: Using identities
@Id
@GeneratedValue(strategy=GenerationType.IDENTITY)
@Column(name="USER_ID)

option #2: Using Auto : The database provider will use the default strategy
@Id
@GeneratedValue(strategy=GenerationType.AUTO)
@Column(name="USER_ID)

option #3: Using Sequence : The database provider will use the sequence strategy
@Id
@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="user_seq")
@SequenceGenerator(name="user_seq", sequenceName="USER_ID_SEQ")
@Column(name="USER_ID)

option #4: Using Table: 
	How does it work?
	We would have a table in database. And when hibernate wants to fetch the primary key
	for an entity. It searches the table to find the associated record that stores the next
	value of the key
	@Id
	@GeneratedValue(strategy=GenerationType.TABLE, generator="user_table_generator")
	@TableGenerator(name="user_table_generator", table = "IFINANCES_KEYS", 
	    pkColumnName="PK_NAME", valueColumnName="PK_VALUE")
	@Column(name="USER_ID")
	private Long userId;